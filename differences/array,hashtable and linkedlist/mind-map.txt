- array: well in case of you will not use too many inserts or deletes, and access the items frequently
- linked-list generaly prefered : because of the list elements can easily be inserted or removed without reallocation or reorganization of the entire structure because the data items need not be stored contiguously in memory 
-  hashTable used when : (traversing) you have a key for each element and I don't know the index of the element into an array,
 hashtables perform better than arrays{either linkedlist or list} (O(1) vs O(n)).